@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");

* {
  font-family: "Inter", sans-serif;
}

.box {
  width: 100% !important;
}

.react-grid-item > .react-resizable-handle::after {
  display: none;
}

.custom-icon {
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 20px;
  height: 20px;
}

.react-resizable-handle {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M20 12L4 12" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M16 8L12 4L8 8" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M8 16L12 20L16 16" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>');
  background-size: 15px 15px; /* adjust size as necessary */
  background-repeat: no-repeat;
  position: relative;
  /* other styles as needed */
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  bottom: -8px;
  transform: rotate(0deg);
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-n {
  top: -6px;
  transform: rotate(0deg);
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-width: 1px !important;
}

.custom .react-resizable-hide {
  background: #000 !important;
  width: 100% !important;
  /* height: 85% !important; */
  border-radius: 6px !important;
}

.ax .react-grid-item {
  width: 34 !important;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* For WebKit browsers (Chrome, Safari) */
.custom-scrollbar::-webkit-scrollbar {
  scrollbar-width: 2px !important;
  scrollbar-color: #d1d5db #f9fafb; /* thumb color, track color */
  width: 10px; /* Set width of scrollbar */
  height: 0px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  width: 0px; /* Set width of scrollbar */
  height: 0px; /* Set height of horizontal scrollbar */
  background: #f9fafb; /* Track color */
  border-radius: 10px; /* Rounded corners */
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #d1d5db; /* Thumb color */
  border-radius: 10px; /* Rounded corners for thumb */
}

/* Optional: Change thumb color on hover */
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: #a1a1a1; /* Darker shade on hover */
}

.custom-multiselect {
  padding: 0.25rem 0.4rem;
}

.custom-multiselect .p-multiselect-label {
  padding: 0.2rem 0.2rem !important;
}

.custom-multiselect .p-multiselect {
  height: 2rem; /* Smaller height */
}

.custom-multiselect-panel .p-multiselect-item {
  padding: 0.25rem 0.5rem 0.5rem 0.5rem !important; /* Reduce padding for dropdown items */
}

input[type="checkbox"]:focus {
  outline: none;
  box-shadow: none;
}
.custom-modal button:focus {
  outline: none;
  box-shadow: none;
}

.p-treeselect {
  max-width: 400px !important;
}

.p-treenode-label {
  font-size: 14px !important;
  color: #000;
}
.p-link {
  position: relative;
  top: 1px !important;
  padding: 5px;
  color: #000;
}
.p-tree {
  padding: 10px !important;
}
.p-treeselect-close {
  visibility: hidden;
  display: none !important;
}
.p-treeselect-header {
  width: 100%;
  padding-top: 14px;
  padding-bottom: 8px;
  padding-left: 10px;
  padding-right: 10px;
}
.p-treenode-leaf .p-treenode-label {
  padding: 12px;
  border-radius: 10px;
  color: #000000;
}
/* .p-tree .p-tree-container .p-treenode .p-treenode-leaf .p-treenode-label.p-highlight{


background: #004152 !important;
} */

.p-treenode-leaf .p-treenode-content .p-tree-toggler {
  display: none !important;
}

.p-inputwrapper {
  border: 1px solid rgb(207, 207, 207) !important;
  border-radius: 10px;
}
.p-inputtext {
  border-radius: 10px;
}
.p-tree-container {
  padding: 0px !important;
}
.p-tree {
  padding: 0px;
}
.p-treenode {
  margin-left: 10px !important;
}
.p-treeselect-items-wrapper .p-component {
  padding: 0px !important;
}

.p-checkbox-box {
  border: 1px solid rgb(209, 209, 209) !important;
}
.p-multiselect-item span {
  color: black !important;
}

.p-multiselect-header .p-multiselect-filter-container .p-multiselect-filter {
  border-radius: 8px !important;
  border: 1px solid rgb(206, 206, 206) !important;
}
.p-multiselect-close {
  display: none !important;
}

.p-checkbox .p-checkbox-box {
  border-radius: 50%;
}
/* .p-multiselect-items-wrapper .p-multiselect-items{
  display: flex !important;
  flex-direction: row;
  gap: 10px !important;
} */
.p-radiobutton-box {
  border: 0.2px solid rgb(197, 197, 197) !important;
}

.p-multiselect-header {
  display: none !important;
}
.p-calendar {
  height: 40px !important;
}
.p-treenode-content {
  border: none !important;
}
.p-treenode-content:focus {
  border: none;
}
.p-treeselect .p-treeselect-label-container {
  outline: none !important; /* Removes the blue focus border */
  box-shadow: none !important; /* Ensures no shadow is applied */
}

.p-treeselect .p-treeselect-label-container:focus {
  outline: none !important; /* Removes the outline when focused */
  box-shadow: none !important;
}
p-treeselect .p-treeview .p-highlight {
  outline: none;
  box-shadow: none; /* Removes any box-shadow applied on focus */
}

/* Remove focus outline from TreeSelect */
.p-treeselect .p-treeview .p-tree-node {
  outline: none;
}

/* Remove default focus styles from input */
.p-treeselect .p-treeview .p-tree-node:focus {
  outline: none;
  box-shadow: none; /* Removes focus shadow if applied */
}

/* .p-datepicker {
  top: 0 !important;
} */
.p-tree .p-tree-container .p-treenode:focus > .p-treenode-content {
  box-shadow: none !important;
}
input[type="radio"] {
  appearance: none; /* Removes default styling */
  -webkit-appearance: none; /* Removes default styling in WebKit browsers */
  background-color: #ffffff; /* Background color of the radio button */
  border: 2px solid #cfcfcf; /* Border color of the radio button */
  border-radius: 50%; /* Make it round */
  width: 20px; /* Size of the radio button */
  height: 20px; /* Size of the radio button */
  cursor: pointer; /* Pointer cursor on hover */
  position: relative; /* For positioning the inner circle */
  outline: none; /* Remove default outline */
}

/* Inner circle styling when radio button is checked */
input[type="radio"]:checked::before {
  content: ""; /* Necessary for ::before pseudo-element */
  position: absolute; /* Position relative to the radio button */
  top: 50%; /* Center it vertically */
  left: 50%; /* Center it horizontally */
  width: 12px; /* Size of the inner circle */
  height: 12px; /* Size of the inner circle */
  background-color: #e9e9e9; /* Color of the inner circle */
  border-radius: 50%; /* Make it round */
  transform: translate(-50%, -50%); /* Center the inner circle */
}

/* Change the radio button background color when checked */
input[type="radio"]:checked {
  background-color: #2cc7e6; /* Custom color when checked */
  border-color: #2cc7e6; /* Optional: match border color */
}

/* Optional: Add hover effect */
input[type="radio"]:hover {
  border-color: #a0a0a0; /* Change border color on hover */
}

/* Remove focus outline when the radio button is focused */
input[type="radio"]:focus {
  outline: none;
  box-shadow: none; /* Remove default focus box-shadow */
}
.p-tree .p-tree-container .p-treenode .p-treenode-content.p-highlight {
  outline: 2px solid #3dd3f1;
  margin-top: 7px !important;
}

/* Custom scrollbar for WebKit-based browsers (Chrome, Safari, Edge) */
.scrollbar-custom::-webkit-scrollbar {
  width: 8px; /* Width of the scrollbar */
}
.scrollbar-custom::-webkit-scrollbar-track {
  background: #f1f1f1; /* Scrollbar track color */
}
.scrollbar-custom::-webkit-scrollbar-thumb {
  background-color: #d9d9d9; /* Scrollbar thumb (the handle) color */
  border: 2px solid #f1f1f1; /* Border around the thumb */
}
.scrollbar-custom::-webkit-scrollbar-thumb:hover {
  background-color: #d9d9d9; /* Thumb color when hovered */
}


